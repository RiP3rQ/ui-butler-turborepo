name: Deploy backend to VPS using Turbo

on:
  push:
    branches: # Only deploy on push to main branch
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      NODE_ENV: production
      HUSKY: 0
      CI: 1


    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build:backend

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} "\
             set -e && \
             echo 'Setting up environment variables in azure...' && \
             export TURBO_TOKEN=${{ secrets.TURBO_TOKEN }} && \
             export TURBO_TEAM=${{ vars.TURBO_TEAM }} && \
             export NODE_ENV=production && \
             export HUSKY=0 && \
             export CI=1 && \
             echo 'Changing directory to deployment path...' && \
             cd ${{ secrets.DEPLOY_PATH }} && \
             echo 'Fetching latest code...' && \
             git fetch origin main && \
             git reset --hard origin/main && \
             echo 'Setting up Node environment...' && \
             source ~/.bashrc && \
             source ~/.nvm/nvm.sh && \
             export NVM_DIR=\$HOME/.nvm && \
             [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh && \
             echo 'Installing dependencies...' && \
             npm install -g pnpm@10.2.1 && \
             npm install -g pm2 && \
             pnpm install && \
             echo 'Building backend...' && \
             pnpm run build:backend && \
             echo 'Restarting service...' && \
             pm2 restart backend || pm2 start 'pnpm run start:backend' --name backend \
           "