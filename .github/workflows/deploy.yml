#name: Build, Push, and Deploy Docker Images via Docker Compose
#
#on:
#  workflow_dispatch:
##  push:
##    branches:
##      - main
#
#env:
#  AZURE_CONTAINER_REGISTRY: uibutler.azurecr.io
#  RESOURCE_GROUP: ui-butler
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Log in to ACR
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
#          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
#          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
#
#      - name: Build Images with Docker Compose
#        run: docker compose build
#
#      - name: Tag and Push Docker Images to ACR
#        run: |
#          services=(api-gateway analytics-service auth-service billing-service components-service execution-service projects-service users-service workflows-service)
#          for service in "${services[@]}"; do
#            echo "Processing $service"
#            docker tag "$service:latest" "${{ env.AZURE_CONTAINER_REGISTRY }}/$service:latest"
#            docker push "${{ env.AZURE_CONTAINER_REGISTRY }}/$service:latest"
#          done
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    strategy:
#      matrix:
#        service:
#          - api-gateway
#          - analytics-service
#          - auth-service
#          - billing-service
#          - components-service
#          - execution-service
#          - projects-service
#          - users-service
#          - workflows-service
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Azure Login
#        uses: azure/login@v2
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy Container App for ${{ matrix.service }}
#        uses: azure/container-apps-deploy@v1
#        with:
#          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ matrix.service }}:latest
#          resourceGroup: ${{ env.RESOURCE_GROUP }}
#          containerAppName: ${{ matrix.service }}